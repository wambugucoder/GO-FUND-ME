version: "3"
services:
    database:
        image: postgres:alpine
        environment:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_DB: GoFundMe-prod
        healthcheck:
            test: ['CMD-SHELL', 'pg_is ready -U postgres']
            interval: 10s
            timeout: 5s
            retries: 5
        restart: always
        volumes: 
            - ../data/pg-data:/var/libs/postgresql/data
        ports: 
            - 5432:5432
        networks:
            - backend-server
    redis:
        image: redis:alpine
        hostname: redis
        restart: always
        volumes: 
            - ../data/redis:/data
        entrypoint: redis-server --appendonly yes
        ports: 
            - 6379:6379
        networks:
            - backend-server
      
    zookeeper:
        image: wurstmeister/zookeeper
        expose:
          - 2181
        networks:
        - backend-server
    kafka:
      image: wurstmeister/kafka
      ports:
        - 9092:9092
      expose:
        - 9093
      environment:
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_HOST_NAME: kafka   
      depends_on:
        - zookeeper
      volumes:
        - ./:/etc/kafka
      networks:
        - backend-server
    server:
        build: .
        ports:
          - 8443:8443
        depends_on:
          - database
          - redis
          - zookeeper
          - kafka
        links:
          - database
          - redis
          - zookeeper
          - kafka
        environment:
          SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/GoFundMe-prod
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
          SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
        #restart: always
        networks:
          - backend-server 
networks:
    backend-server:
         driver: bridge

  
       

